{"version":3,"sources":["C:\\Users\\Micha\\Favorites\\Downloads\\omnipreneur\\__tests__\\lib\\analytics\\real-time.test.ts"],"sourcesContent":["// @ts-nocheck\r\nimport { RealTimeAnalytics } from '@/lib/analytics/real-time'\r\n\r\ndescribe('RealTimeAnalytics', () => {\r\n  let analytics: RealTimeAnalytics\r\n\r\n  beforeEach(() => {\r\n    analytics = new RealTimeAnalytics()\r\n  })\r\n\r\n  afterEach(() => {\r\n    analytics.destroy()\r\n  })\r\n\r\n  describe('Event Tracking', () => {\r\n    it('should track basic events', () => {\r\n      const eventData = analytics.trackEvent('user_123', 'page_view', {\r\n        page: '/dashboard',\r\n        referrer: 'https://google.com'\r\n      })\r\n\r\n      expect(eventData).toMatchObject({\r\n        userId: 'user_123',\r\n        event: 'page_view',\r\n        data: {\r\n          page: '/dashboard',\r\n          referrer: 'https://google.com'\r\n        },\r\n        timestamp: expect.any(String),\r\n        sessionId: expect.any(String)\r\n      })\r\n    })\r\n\r\n    it('should track user actions', () => {\r\n      const eventData = analytics.trackUserAction('user_123', 'button_click', {\r\n        buttonId: 'cta-signup',\r\n        page: '/pricing'\r\n      })\r\n\r\n      expect(eventData.event).toBe('user_action')\r\n      expect(eventData.data.action).toBe('button_click')\r\n      expect(eventData.data.metadata.buttonId).toBe('cta-signup')\r\n    })\r\n\r\n    it('should track product usage', () => {\r\n      const eventData = analytics.trackProductUsage(\r\n        'user_123',\r\n        'bundle-builder',\r\n        'create_bundle',\r\n        { duration: 5000, success: true }\r\n      )\r\n\r\n      expect(eventData.event).toBe('product_usage')\r\n      expect(eventData.data.productId).toBe('bundle-builder')\r\n      expect(eventData.data.feature).toBe('create_bundle')\r\n      expect(eventData.data.usage.success).toBe(true)\r\n    })\r\n\r\n    it('should track funnel steps', () => {\r\n      const eventData = analytics.trackFunnelStep(\r\n        'user_123',\r\n        'signup_funnel',\r\n        'email_entered',\r\n        { previousStep: 'landing_page', timeToStep: 2000 }\r\n      )\r\n\r\n      expect(eventData.event).toBe('funnel_step')\r\n      expect(eventData.data.funnelId).toBe('signup_funnel')\r\n      expect(eventData.data.step).toBe('email_entered')\r\n    })\r\n\r\n    it('should track revenue events', () => {\r\n      const eventData = analytics.trackRevenue('user_123', 29.99, 'USD', {\r\n        subscriptionId: 'sub_123',\r\n        productId: 'pro_plan'\r\n      })\r\n\r\n      expect(eventData.event).toBe('revenue')\r\n      expect(eventData.data.amount).toBe(29.99)\r\n      expect(eventData.data.currency).toBe('USD')\r\n    })\r\n  })\r\n\r\n  describe('Real-time Analytics', () => {\r\n    beforeEach(() => {\r\n      // Add some test events\r\n      analytics.trackEvent('user_123', 'page_view')\r\n      analytics.trackUserAction('user_123', 'click')\r\n      analytics.trackProductUsage('user_123', 'app', 'feature_use')\r\n      analytics.trackRevenue('user_123', 10.00)\r\n    })\r\n\r\n    it('should get real-time analytics for user', async () => {\r\n      const analyticsData = await analytics.getRealTimeAnalytics('user_123', '1h')\r\n\r\n      expect(analyticsData).toMatchObject({\r\n        totalEvents: expect.any(Number),\r\n        events: expect.any(Array),\r\n        metrics: expect.objectContaining({\r\n          userActions: expect.any(Number),\r\n          productUsage: expect.any(Number),\r\n          revenue: expect.any(Number)\r\n        }),\r\n        trends: expect.any(Object),\r\n        lastUpdated: expect.any(String)\r\n      })\r\n\r\n      expect(analyticsData.totalEvents).toBeGreaterThan(0)\r\n    })\r\n\r\n    it('should get live dashboard metrics', async () => {\r\n      const metrics = await analytics.getLiveDashboardMetrics('user_123')\r\n\r\n      expect(metrics).toMatchObject({\r\n        activeUsers: expect.any(Number),\r\n        revenueToday: expect.any(Number),\r\n        conversionRate: expect.any(Number),\r\n        topProducts: expect.any(Array),\r\n        recentActivity: expect.any(Array),\r\n        performanceMetrics: expect.objectContaining({\r\n          avgResponseTime: expect.any(Number),\r\n          successRate: expect.any(Number),\r\n          errorRate: expect.any(Number)\r\n        }),\r\n        realTimeStats: expect.objectContaining({\r\n          sessionsActive: expect.any(Number),\r\n          eventsPerMinute: expect.any(Number),\r\n          currentLoad: expect.any(Number)\r\n        })\r\n      })\r\n    })\r\n\r\n    it('should filter events by time range', async () => {\r\n      const oneHourAgo = await analytics.getRealTimeAnalytics('user_123', '1h')\r\n      const sixHoursAgo = await analytics.getRealTimeAnalytics('user_123', '6h')\r\n\r\n      expect(sixHoursAgo.totalEvents).toBeGreaterThanOrEqual(oneHourAgo.totalEvents)\r\n    })\r\n  })\r\n\r\n  describe('WebSocket Integration', () => {\r\n    let mockWS: any\r\n\r\n    beforeEach(() => {\r\n      mockWS = {\r\n        send: jest.fn(),\r\n        readyState: 1, // OPEN\r\n        on: jest.fn(),\r\n        close: jest.fn()\r\n      }\r\n    })\r\n\r\n    it('should add WebSocket connection', () => {\r\n      analytics.addWSConnection('user_123', mockWS)\r\n\r\n      expect(mockWS.send).toHaveBeenCalledWith(\r\n        expect.stringContaining('initial_analytics')\r\n      )\r\n    })\r\n\r\n    it('should broadcast to user on event', () => {\r\n      analytics.addWSConnection('user_123', mockWS)\r\n      \r\n      analytics.trackEvent('user_123', 'test_event')\r\n\r\n      expect(mockWS.send).toHaveBeenCalledWith(\r\n        expect.stringContaining('analytics_update')\r\n      )\r\n    })\r\n\r\n    it('should broadcast to all connected clients', () => {\r\n      const mockWS2 = { ...mockWS, send: jest.fn() }\r\n      \r\n      analytics.addWSConnection('user_123', mockWS)\r\n      analytics.addWSConnection('user_456', mockWS2)\r\n\r\n      analytics.broadcastToAll({ type: 'system_message', data: 'test' })\r\n\r\n      expect(mockWS.send).toHaveBeenCalled()\r\n      expect(mockWS2.send).toHaveBeenCalled()\r\n    })\r\n  })\r\n\r\n  describe('Metrics Calculation', () => {\r\n    beforeEach(() => {\r\n      // Create predictable test data\r\n      analytics.trackUserAction('user_123', 'click')\r\n      analytics.trackUserAction('user_123', 'submit')\r\n      analytics.trackProductUsage('user_123', 'app1', 'feature1')\r\n      analytics.trackProductUsage('user_123', 'app2', 'feature2')\r\n      analytics.trackRevenue('user_123', 10.00)\r\n      analytics.trackRevenue('user_123', 20.00)\r\n    })\r\n\r\n    it('should calculate metrics correctly', async () => {\r\n      const data = await analytics.getRealTimeAnalytics('user_123', '1h')\r\n\r\n      expect(data.metrics.userActions).toBe(2)\r\n      expect(data.metrics.productUsage).toBe(2)\r\n      expect(data.metrics.revenue).toBe(30.00)\r\n      expect(data.metrics.uniqueProducts).toBe(2)\r\n    })\r\n\r\n    it('should calculate trends', async () => {\r\n      const data = await analytics.getRealTimeAnalytics('user_123', '1h')\r\n\r\n      expect(data.trends).toMatchObject({\r\n        hourly: expect.any(Object),\r\n        growth: expect.any(Number),\r\n        predictions: expect.objectContaining({\r\n          nextHour: expect.any(Number),\r\n          confidence: expect.any(Number)\r\n        })\r\n      })\r\n    })\r\n  })\r\n\r\n  describe('Event Emission', () => {\r\n    it('should emit events on tracking', (done) => {\r\n      analytics.on('analytics:event', (eventData) => {\r\n        expect(eventData.event).toBe('test_event')\r\n        expect(eventData.userId).toBe('user_123')\r\n        done()\r\n      })\r\n\r\n      analytics.trackEvent('user_123', 'test_event')\r\n    })\r\n\r\n    it('should emit events on automation trigger', (done) => {\r\n      analytics.on('automation:triggered', (data) => {\r\n        expect(data.userId).toBe('user_123')\r\n        done()\r\n      })\r\n\r\n      // This would be triggered by the automation system\r\n      analytics.emit('automation:triggered', { userId: 'user_123' })\r\n    })\r\n  })\r\n\r\n  describe('Performance', () => {\r\n    it('should handle high event volume', () => {\r\n      const startTime = Date.now()\r\n      \r\n      // Track 1000 events\r\n      for (let i = 0; i < 1000; i++) {\r\n        analytics.trackEvent(`user_${i}`, 'performance_test')\r\n      }\r\n      \r\n      const endTime = Date.now()\r\n      const duration = endTime - startTime\r\n      \r\n      // Should complete within reasonable time (less than 1 second)\r\n      expect(duration).toBeLessThan(1000)\r\n    })\r\n\r\n    it('should manage memory usage with buffer limits', async () => {\r\n      // Fill buffer beyond typical limits\r\n      for (let i = 0; i < 200; i++) {\r\n        analytics.trackEvent('user_123', `event_${i}`)\r\n      }\r\n\r\n      const data = await analytics.getRealTimeAnalytics('user_123', '1h')\r\n      \r\n      // Should still function correctly\r\n      expect(data.totalEvents).toBeGreaterThan(0)\r\n      expect(data.events).toBeInstanceOf(Array)\r\n    })\r\n  })\r\n\r\n  describe('Error Handling', () => {\r\n    it('should handle invalid time ranges gracefully', async () => {\r\n      const data = await analytics.getRealTimeAnalytics('user_123', 'invalid')\r\n      \r\n      // Should default to 1h\r\n      expect(data).toMatchObject({\r\n        totalEvents: expect.any(Number),\r\n        events: expect.any(Array),\r\n        metrics: expect.any(Object)\r\n      })\r\n    })\r\n\r\n    it('should handle missing user data', async () => {\r\n      const data = await analytics.getRealTimeAnalytics('nonexistent_user', '1h')\r\n      \r\n      expect(data.totalEvents).toBe(0)\r\n      expect(data.events).toEqual([])\r\n    })\r\n\r\n    it('should handle WebSocket errors gracefully', () => {\r\n      const mockWS = {\r\n        send: jest.fn(() => { throw new Error('Connection lost') }),\r\n        readyState: 1,\r\n        on: jest.fn()\r\n      }\r\n\r\n      expect(() => {\r\n        analytics.addWSConnection('user_123', mockWS)\r\n        analytics.trackEvent('user_123', 'test_event')\r\n      }).not.toThrow()\r\n    })\r\n  })\r\n\r\n  describe('Data Cleanup', () => {\r\n    it('should clean up old events', () => {\r\n      // Add events\r\n      analytics.trackEvent('user_123', 'old_event')\r\n      \r\n      // Manually trigger cleanup (in real implementation this runs automatically)\r\n      const cleanupMethod = analytics['flushAnalyticsBuffer'].bind(analytics)\r\n      cleanupMethod()\r\n      \r\n      // Should not throw errors\r\n      expect(true).toBe(true)\r\n    })\r\n\r\n    it('should destroy cleanly', () => {\r\n      analytics.trackEvent('user_123', 'test_event')\r\n      \r\n      expect(() => {\r\n        analytics.destroy()\r\n      }).not.toThrow()\r\n    })\r\n  })\r\n})"],"names":["describe","analytics","beforeEach","RealTimeAnalytics","afterEach","destroy","it","eventData","trackEvent","page","referrer","expect","toMatchObject","userId","event","data","timestamp","any","String","sessionId","trackUserAction","buttonId","toBe","action","metadata","trackProductUsage","duration","success","productId","feature","usage","trackFunnelStep","previousStep","timeToStep","funnelId","step","trackRevenue","subscriptionId","amount","currency","analyticsData","getRealTimeAnalytics","totalEvents","Number","events","Array","metrics","objectContaining","userActions","productUsage","revenue","trends","Object","lastUpdated","toBeGreaterThan","getLiveDashboardMetrics","activeUsers","revenueToday","conversionRate","topProducts","recentActivity","performanceMetrics","avgResponseTime","successRate","errorRate","realTimeStats","sessionsActive","eventsPerMinute","currentLoad","oneHourAgo","sixHoursAgo","toBeGreaterThanOrEqual","mockWS","send","jest","fn","readyState","on","close","addWSConnection","toHaveBeenCalledWith","stringContaining","mockWS2","broadcastToAll","type","toHaveBeenCalled","uniqueProducts","hourly","growth","predictions","nextHour","confidence","done","emit","startTime","Date","now","i","endTime","toBeLessThan","toBeInstanceOf","toEqual","Error","not","toThrow","cleanupMethod","bind"],"mappings":"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"}