{"version":3,"sources":["C:\\Users\\Micha\\Favorites\\Downloads\\omnipreneur\\jest.setup.js"],"sourcesContent":["// Jest setup file for test configuration\r\nimport '@testing-library/jest-dom'\r\nimport 'jest-extended'\r\n\r\n// Mock Next.js router\r\njest.mock('next/navigation', () => ({\r\n  useRouter: () => ({\r\n    push: jest.fn(),\r\n    replace: jest.fn(),\r\n    back: jest.fn(),\r\n    forward: jest.fn(),\r\n    refresh: jest.fn(),\r\n    prefetch: jest.fn()\r\n  }),\r\n  useSearchParams: () => ({\r\n    get: jest.fn(),\r\n    getAll: jest.fn(),\r\n    has: jest.fn(),\r\n    keys: jest.fn(),\r\n    values: jest.fn(),\r\n    entries: jest.fn(),\r\n    forEach: jest.fn(),\r\n    toString: jest.fn()\r\n  }),\r\n  usePathname: () => '/test-path'\r\n}))\r\n\r\n// Mock Framer Motion\r\njest.mock('framer-motion', () => ({\r\n  motion: {\r\n    div: ({ children, ...props }) => <div {...props}>{children}</div>,\r\n    span: ({ children, ...props }) => <span {...props}>{children}</span>,\r\n    button: ({ children, ...props }) => <button {...props}>{children}</button>,\r\n    form: ({ children, ...props }) => <form {...props}>{children}</form>,\r\n    input: ({ children, ...props }) => <input {...props}>{children}</input>\r\n  },\r\n  AnimatePresence: ({ children }) => children,\r\n  useAnimation: () => ({\r\n    start: jest.fn(),\r\n    stop: jest.fn(),\r\n    set: jest.fn()\r\n  })\r\n}))\r\n\r\n// Mock Lucide React icons\r\njest.mock('lucide-react', () => ({\r\n  ChevronDown: () => <div data-testid=\"chevron-down\" />,\r\n  ChevronUp: () => <div data-testid=\"chevron-up\" />,\r\n  User: () => <div data-testid=\"user-icon\" />,\r\n  Mail: () => <div data-testid=\"mail-icon\" />,\r\n  Lock: () => <div data-testid=\"lock-icon\" />,\r\n  Eye: () => <div data-testid=\"eye-icon\" />,\r\n  EyeOff: () => <div data-testid=\"eye-off-icon\" />,\r\n  Check: () => <div data-testid=\"check-icon\" />,\r\n  X: () => <div data-testid=\"x-icon\" />,\r\n  Loader2: () => <div data-testid=\"loader-icon\" />,\r\n  AlertCircle: () => <div data-testid=\"alert-icon\" />,\r\n  Upload: () => <div data-testid=\"upload-icon\" />,\r\n  Download: () => <div data-testid=\"download-icon\" />,\r\n  Settings: () => <div data-testid=\"settings-icon\" />,\r\n  LogOut: () => <div data-testid=\"logout-icon\" />,\r\n  BarChart3: () => <div data-testid=\"barchart-icon\" />,\r\n  Activity: () => <div data-testid=\"activity-icon\" />,\r\n  TrendingUp: () => <div data-testid=\"trending-up-icon\" />,\r\n  DollarSign: () => <div data-testid=\"dollar-icon\" />,\r\n  Target: () => <div data-testid=\"target-icon\" />,\r\n  Users: () => <div data-testid=\"users-icon\" />,\r\n  Zap: () => <div data-testid=\"zap-icon\" />,\r\n  Clock: () => <div data-testid=\"clock-icon\" />,\r\n  CheckCircle: () => <div data-testid=\"check-circle-icon\" />,\r\n  AlertTriangle: () => <div data-testid=\"alert-triangle-icon\" />,\r\n  ArrowRight: () => <div data-testid=\"arrow-right-icon\" />,\r\n  Play: () => <div data-testid=\"play-icon\" />,\r\n  Crown: () => <div data-testid=\"crown-icon\" />,\r\n  Sparkles: () => <div data-testid=\"sparkles-icon\" />,\r\n  Calendar: () => <div data-testid=\"calendar-icon\" />,\r\n  FileText: () => <div data-testid=\"file-text-icon\" />,\r\n  Package: () => <div data-testid=\"package-icon\" />,\r\n  Brain: () => <div data-testid=\"brain-icon\" />\r\n}))\r\n\r\n// Mock environment variables\r\nprocess.env.NODE_ENV = 'test'\r\nprocess.env.NEXT_PUBLIC_APP_URL = 'http://localhost:3000'\r\nprocess.env.JWT_SECRET = 'test-jwt-secret'\r\nprocess.env.DATABASE_URL = 'postgresql://test:test@localhost:5432/test_db'\r\n\r\n// Global fetch mock\r\nglobal.fetch = jest.fn()\r\n\r\n// Mock WebSocket\r\nglobal.WebSocket = jest.fn().mockImplementation(() => ({\r\n  send: jest.fn(),\r\n  close: jest.fn(),\r\n  onopen: null,\r\n  onmessage: null,\r\n  onclose: null,\r\n  onerror: null,\r\n  readyState: 1,\r\n  CONNECTING: 0,\r\n  OPEN: 1,\r\n  CLOSING: 2,\r\n  CLOSED: 3\r\n}))\r\n\r\n// Mock localStorage\r\nconst localStorageMock = {\r\n  getItem: jest.fn(),\r\n  setItem: jest.fn(),\r\n  removeItem: jest.fn(),\r\n  clear: jest.fn()\r\n}\r\nglobal.localStorage = localStorageMock\r\n\r\n// Mock sessionStorage\r\nconst sessionStorageMock = {\r\n  getItem: jest.fn(),\r\n  setItem: jest.fn(),\r\n  removeItem: jest.fn(),\r\n  clear: jest.fn()\r\n}\r\nglobal.sessionStorage = sessionStorageMock\r\n\r\n// Mock console methods to reduce noise in tests\r\nglobal.console = {\r\n  ...console,\r\n  warn: jest.fn(),\r\n  error: jest.fn(),\r\n  log: jest.fn()\r\n}\r\n\r\n// Mock File API\r\nglobal.File = class File {\r\n  constructor(chunks, filename, options = {}) {\r\n    this.name = filename\r\n    this.size = chunks.reduce((size, chunk) => size + chunk.length, 0)\r\n    this.type = options.type || ''\r\n    this.lastModified = options.lastModified || Date.now()\r\n  }\r\n  \r\n  arrayBuffer() {\r\n    return Promise.resolve(new ArrayBuffer(this.size))\r\n  }\r\n  \r\n  text() {\r\n    return Promise.resolve('')\r\n  }\r\n}\r\n\r\nglobal.FileReader = class FileReader {\r\n  constructor() {\r\n    this.readyState = 0\r\n    this.result = null\r\n  }\r\n  \r\n  readAsDataURL() {\r\n    setTimeout(() => {\r\n      this.result = 'data:text/plain;base64,dGVzdA=='\r\n      this.onload?.()\r\n    }, 0)\r\n  }\r\n  \r\n  readAsText() {\r\n    setTimeout(() => {\r\n      this.result = 'test content'\r\n      this.onload?.()\r\n    }, 0)\r\n  }\r\n}\r\n\r\n// Mock FormData\r\nglobal.FormData = class FormData {\r\n  constructor() {\r\n    this.data = new Map()\r\n  }\r\n  \r\n  append(key, value) {\r\n    if (this.data.has(key)) {\r\n      const existing = this.data.get(key)\r\n      if (Array.isArray(existing)) {\r\n        existing.push(value)\r\n      } else {\r\n        this.data.set(key, [existing, value])\r\n      }\r\n    } else {\r\n      this.data.set(key, value)\r\n    }\r\n  }\r\n  \r\n  get(key) {\r\n    const value = this.data.get(key)\r\n    return Array.isArray(value) ? value[0] : value\r\n  }\r\n  \r\n  getAll(key) {\r\n    const value = this.data.get(key)\r\n    return Array.isArray(value) ? value : value ? [value] : []\r\n  }\r\n  \r\n  has(key) {\r\n    return this.data.has(key)\r\n  }\r\n  \r\n  delete(key) {\r\n    this.data.delete(key)\r\n  }\r\n  \r\n  entries() {\r\n    return this.data.entries()\r\n  }\r\n  \r\n  keys() {\r\n    return this.data.keys()\r\n  }\r\n  \r\n  values() {\r\n    return this.data.values()\r\n  }\r\n}\r\n\r\n// Mock URL.createObjectURL\r\nglobal.URL.createObjectURL = jest.fn(() => 'mocked-object-url')\r\nglobal.URL.revokeObjectURL = jest.fn()\r\n\r\n// Setup test database if needed\r\nbeforeAll(async () => {\r\n  // Initialize test database connection\r\n  // This would be implemented based on your database choice\r\n})\r\n\r\nafterAll(async () => {\r\n  // Clean up test database connections\r\n  // This would be implemented based on your database choice\r\n})\r\n\r\nbeforeEach(() => {\r\n  // Clear all mocks before each test\r\n  jest.clearAllMocks()\r\n  \r\n  // Reset fetch mock\r\n  fetch.mockClear()\r\n  \r\n  // Reset localStorage\r\n  localStorageMock.getItem.mockClear()\r\n  localStorageMock.setItem.mockClear()\r\n  localStorageMock.removeItem.mockClear()\r\n  localStorageMock.clear.mockClear()\r\n})\r\n\r\nafterEach(() => {\r\n  // Clean up after each test\r\n  jest.restoreAllMocks()\r\n})\r\n\r\n// Global test utilities\r\nglobal.testUtils = {\r\n  // Mock API response\r\n  mockApiResponse: (data, status = 200) => ({\r\n    ok: status >= 200 && status < 300,\r\n    status,\r\n    json: () => Promise.resolve(data),\r\n    text: () => Promise.resolve(JSON.stringify(data))\r\n  }),\r\n  \r\n  // Create mock user\r\n  createMockUser: (overrides = {}) => ({\r\n    id: 'user_123',\r\n    email: 'test@example.com',\r\n    name: 'Test User',\r\n    role: 'user',\r\n    subscription: {\r\n      plan: 'FREE',\r\n      status: 'active'\r\n    },\r\n    ...overrides\r\n  }),\r\n  \r\n  // Create mock request\r\n  createMockRequest: (overrides = {}) => ({\r\n    method: 'GET',\r\n    url: 'http://localhost:3000/api/test',\r\n    headers: new Headers(),\r\n    nextUrl: { pathname: '/api/test' },\r\n    json: () => Promise.resolve({}),\r\n    formData: () => Promise.resolve(new FormData()),\r\n    ...overrides\r\n  }),\r\n  \r\n  // Wait for async operations\r\n  waitFor: (ms = 100) => new Promise(resolve => setTimeout(resolve, ms)),\r\n  \r\n  // Mock file\r\n  createMockFile: (name = 'test.txt', content = 'test content', type = 'text/plain') => {\r\n    return new File([content], name, { type })\r\n  }\r\n}\r\n\r\n// Suppress specific warnings in tests\r\nconst originalError = console.error\r\nbeforeAll(() => {\r\n  console.error = (...args) => {\r\n    if (\r\n      typeof args[0] === 'string' &&\r\n      args[0].includes('Warning: ReactDOM.render is no longer supported')\r\n    ) {\r\n      return\r\n    }\r\n    originalError.call(console, ...args)\r\n  }\r\n})\r\n\r\nafterAll(() => {\r\n  console.error = originalError\r\n})"],"names":["jest","mock","useRouter","push","fn","replace","back","forward","refresh","prefetch","useSearchParams","get","getAll","has","keys","values","entries","forEach","toString","usePathname","motion","div","children","props","span","button","form","input","AnimatePresence","useAnimation","start","stop","set","ChevronDown","data-testid","ChevronUp","User","Mail","Lock","Eye","EyeOff","Check","X","Loader2","AlertCircle","Upload","Download","Settings","LogOut","BarChart3","Activity","TrendingUp","DollarSign","Target","Users","Zap","Clock","CheckCircle","AlertTriangle","ArrowRight","Play","Crown","Sparkles","Calendar","FileText","Package","Brain","process","env","NODE_ENV","NEXT_PUBLIC_APP_URL","JWT_SECRET","DATABASE_URL","global","fetch","WebSocket","mockImplementation","send","close","onopen","onmessage","onclose","onerror","readyState","CONNECTING","OPEN","CLOSING","CLOSED","localStorageMock","getItem","setItem","removeItem","clear","localStorage","sessionStorageMock","sessionStorage","console","warn","error","log","File","chunks","filename","options","name","size","reduce","chunk","length","type","lastModified","Date","now","arrayBuffer","Promise","resolve","ArrayBuffer","text","FileReader","result","readAsDataURL","setTimeout","onload","readAsText","FormData","data","Map","append","key","value","existing","Array","isArray","delete","URL","createObjectURL","revokeObjectURL","beforeAll","afterAll","beforeEach","clearAllMocks","mockClear","afterEach","restoreAllMocks","testUtils","mockApiResponse","status","ok","json","JSON","stringify","createMockUser","overrides","id","email","role","subscription","plan","createMockRequest","method","url","headers","Headers","nextUrl","pathname","formData","waitFor","ms","createMockFile","content","originalError","args","includes","call"],"mappings":"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"}