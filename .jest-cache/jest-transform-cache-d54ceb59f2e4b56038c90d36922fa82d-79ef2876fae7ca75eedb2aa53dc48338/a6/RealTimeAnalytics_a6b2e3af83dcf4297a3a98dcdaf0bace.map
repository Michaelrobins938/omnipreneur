{"version":3,"sources":["C:\\Users\\Micha\\Favorites\\Downloads\\omnipreneur\\app\\components\\dashboard\\RealTimeAnalytics.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { \r\n  Activity, \r\n  TrendingUp, \r\n  Users, \r\n  DollarSign, \r\n  Target, \r\n  Zap,\r\n  BarChart3,\r\n  Clock,\r\n  CheckCircle,\r\n  AlertTriangle\r\n} from 'lucide-react';\r\n\r\ninterface RealTimeMetrics {\r\n  activeUsers: number;\r\n  revenueToday: number;\r\n  conversionRate: number;\r\n  topProducts: Array<{ productId: string; usage: number }>;\r\n  recentActivity: Array<any>;\r\n  performanceMetrics: {\r\n    avgResponseTime: number;\r\n    successRate: number;\r\n    errorRate: number;\r\n  };\r\n  realTimeStats: {\r\n    sessionsActive: number;\r\n    eventsPerMinute: number;\r\n    currentLoad: number;\r\n  };\r\n}\r\n\r\ninterface AnalyticsData {\r\n  realtime: {\r\n    totalEvents: number;\r\n    events: Array<any>;\r\n    metrics: any;\r\n    trends: any;\r\n  };\r\n  dashboard: RealTimeMetrics;\r\n  timestamp: string;\r\n}\r\n\r\nexport default function RealTimeAnalytics() {\r\n  const [analyticsData, setAnalyticsData] = useState<AnalyticsData | null>(null);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [connectionStatus, setConnectionStatus] = useState<'connecting' | 'connected' | 'disconnected'>('disconnected');\r\n  const wsRef = useRef<WebSocket | null>(null);\r\n  const retryTimeoutRef = useRef<NodeJS.Timeout>();\r\n\r\n  useEffect(() => {\r\n    connectWebSocket();\r\n    fetchInitialData();\r\n\r\n    return () => {\r\n      if (wsRef.current) {\r\n        wsRef.current.close();\r\n      }\r\n      if (retryTimeoutRef.current) {\r\n        clearTimeout(retryTimeoutRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const connectWebSocket = async () => {\r\n    try {\r\n      setConnectionStatus('connecting');\r\n      \r\n      // Get auth token\r\n      const token = localStorage.getItem('auth_token') || 'demo_token';\r\n      \r\n      // Connect to WebSocket\r\n      const protocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:';\r\n      const wsUrl = `${protocol}//${window.location.host}/api/analytics/websocket?token=${token}`;\r\n      \r\n      const ws = new WebSocket(wsUrl);\r\n      \r\n      ws.onopen = () => {\r\n        console.log('WebSocket connected');\r\n        setIsConnected(true);\r\n        setConnectionStatus('connected');\r\n        \r\n        // Subscribe to metrics updates\r\n        ws.send(JSON.stringify({\r\n          type: 'subscribe_metrics',\r\n          payload: {\r\n            metrics: ['activeUsers', 'revenueToday', 'conversionRate', 'performanceMetrics'],\r\n            interval: 5000 // Update every 5 seconds\r\n          }\r\n        }));\r\n      };\r\n      \r\n      ws.onmessage = (event) => {\r\n        try {\r\n          const message = JSON.parse(event.data);\r\n          handleWebSocketMessage(message);\r\n        } catch (error) {\r\n          console.error('WebSocket message parse error:', error);\r\n        }\r\n      };\r\n      \r\n      ws.onclose = () => {\r\n        console.log('WebSocket disconnected');\r\n        setIsConnected(false);\r\n        setConnectionStatus('disconnected');\r\n        \r\n        // Retry connection after 5 seconds\r\n        retryTimeoutRef.current = setTimeout(() => {\r\n          connectWebSocket();\r\n        }, 5000);\r\n      };\r\n      \r\n      ws.onerror = (error) => {\r\n        console.error('WebSocket error:', error);\r\n        setConnectionStatus('disconnected');\r\n      };\r\n      \r\n      wsRef.current = ws;\r\n      \r\n    } catch (error) {\r\n      console.error('WebSocket connection error:', error);\r\n      setConnectionStatus('disconnected');\r\n      \r\n      // Retry after 5 seconds\r\n      retryTimeoutRef.current = setTimeout(() => {\r\n        connectWebSocket();\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  const handleWebSocketMessage = (message: any) => {\r\n    switch (message.type) {\r\n      case 'connected':\r\n        console.log('WebSocket connection confirmed');\r\n        break;\r\n        \r\n      case 'initial_analytics':\r\n      case 'analytics_snapshot':\r\n        setAnalyticsData(message.payload);\r\n        break;\r\n        \r\n      case 'metrics_update':\r\n        setAnalyticsData(prev => prev ? {\r\n          ...prev,\r\n          dashboard: { ...prev.dashboard, ...message.payload },\r\n          timestamp: message.timestamp\r\n        } : null);\r\n        break;\r\n        \r\n      case 'analytics_update':\r\n        // Handle real-time event updates\r\n        setAnalyticsData(prev => {\r\n          if (!prev) return null;\r\n          \r\n          return {\r\n            ...prev,\r\n            realtime: {\r\n              ...prev.realtime,\r\n              totalEvents: prev.realtime.totalEvents + 1,\r\n              events: [...prev.realtime.events.slice(-99), message.payload]\r\n            }\r\n          };\r\n        });\r\n        break;\r\n        \r\n      case 'error':\r\n        console.error('WebSocket error message:', message.message);\r\n        break;\r\n        \r\n      default:\r\n        console.log('Unknown message type:', message.type);\r\n    }\r\n  };\r\n\r\n  const fetchInitialData = async () => {\r\n    try {\r\n      const response = await fetch('/api/analytics/real-time?timeRange=24h');\r\n      const result = await response.json();\r\n      \r\n      if (result.success) {\r\n        setAnalyticsData(result.data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to fetch initial analytics data:', error);\r\n    }\r\n  };\r\n\r\n  const trackEvent = (event: string, data: any = {}) => {\r\n    if (wsRef.current && wsRef.current.readyState === WebSocket.OPEN) {\r\n      wsRef.current.send(JSON.stringify({\r\n        type: 'track_event',\r\n        payload: { event, data }\r\n      }));\r\n    }\r\n  };\r\n\r\n  if (!analyticsData) {\r\n    return (\r\n      <div className=\"bg-zinc-900/50 border border-zinc-800 rounded-xl p-6\">\r\n        <div className=\"flex items-center justify-center h-64\">\r\n          <div className=\"text-center\">\r\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500 mx-auto mb-4\"></div>\r\n            <p className=\"text-zinc-400\">Loading real-time analytics...</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const { dashboard, realtime } = analyticsData;\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Connection Status */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <h2 className=\"text-2xl font-bold text-white\">Real-Time Analytics</h2>\r\n        <div className=\"flex items-center space-x-2\">\r\n          <div className={`w-2 h-2 rounded-full ${\r\n            connectionStatus === 'connected' ? 'bg-green-500' : \r\n            connectionStatus === 'connecting' ? 'bg-yellow-500' : 'bg-red-500'\r\n          }`}></div>\r\n          <span className=\"text-sm text-zinc-400 capitalize\">{connectionStatus}</span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Key Metrics */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n        <MetricCard\r\n          title=\"Active Users\"\r\n          value={dashboard.activeUsers}\r\n          icon={<Users className=\"w-5 h-5\" />}\r\n          trend={realtime.trends?.growth || 0}\r\n          color=\"blue\"\r\n        />\r\n        \r\n        <MetricCard\r\n          title=\"Revenue Today\"\r\n          value={`$${dashboard.revenueToday.toFixed(2)}`}\r\n          icon={<DollarSign className=\"w-5 h-5\" />}\r\n          trend={15.3}\r\n          color=\"green\"\r\n        />\r\n        \r\n        <MetricCard\r\n          title=\"Conversion Rate\"\r\n          value={`${dashboard.conversionRate.toFixed(1)}%`}\r\n          icon={<Target className=\"w-5 h-5\" />}\r\n          trend={-2.1}\r\n          color=\"purple\"\r\n        />\r\n        \r\n        <MetricCard\r\n          title=\"Events/Min\"\r\n          value={dashboard.realTimeStats.eventsPerMinute}\r\n          icon={<Activity className=\"w-5 h-5\" />}\r\n          trend={8.7}\r\n          color=\"orange\"\r\n        />\r\n      </div>\r\n\r\n      {/* Performance Metrics */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n        <div className=\"bg-zinc-900/50 border border-zinc-800 rounded-xl p-6\">\r\n          <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center\">\r\n            <BarChart3 className=\"w-5 h-5 mr-2\" />\r\n            Performance Metrics\r\n          </h3>\r\n          \r\n          <div className=\"space-y-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <span className=\"text-zinc-400\">Response Time</span>\r\n              <span className=\"text-white font-medium\">\r\n                {dashboard.performanceMetrics.avgResponseTime.toFixed(0)}ms\r\n              </span>\r\n            </div>\r\n            \r\n            <div className=\"flex items-center justify-between\">\r\n              <span className=\"text-zinc-400\">Success Rate</span>\r\n              <div className=\"flex items-center\">\r\n                <CheckCircle className=\"w-4 h-4 text-green-500 mr-1\" />\r\n                <span className=\"text-white font-medium\">\r\n                  {dashboard.performanceMetrics.successRate.toFixed(1)}%\r\n                </span>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"flex items-center justify-between\">\r\n              <span className=\"text-zinc-400\">Error Rate</span>\r\n              <div className=\"flex items-center\">\r\n                <AlertTriangle className=\"w-4 h-4 text-red-500 mr-1\" />\r\n                <span className=\"text-white font-medium\">\r\n                  {dashboard.performanceMetrics.errorRate.toFixed(1)}%\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-zinc-900/50 border border-zinc-800 rounded-xl p-6\">\r\n          <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center\">\r\n            <Zap className=\"w-5 h-5 mr-2\" />\r\n            System Status\r\n          </h3>\r\n          \r\n          <div className=\"space-y-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <span className=\"text-zinc-400\">Active Sessions</span>\r\n              <span className=\"text-white font-medium\">\r\n                {dashboard.realTimeStats.sessionsActive}\r\n              </span>\r\n            </div>\r\n            \r\n            <div className=\"flex items-center justify-between\">\r\n              <span className=\"text-zinc-400\">System Load</span>\r\n              <div className=\"flex items-center\">\r\n                <div className=\"w-20 h-2 bg-zinc-700 rounded-full mr-2\">\r\n                  <div \r\n                    className=\"h-full bg-blue-500 rounded-full\"\r\n                    style={{ width: `${Math.min(100, dashboard.realTimeStats.currentLoad)}%` }}\r\n                  />\r\n                </div>\r\n                <span className=\"text-white font-medium\">\r\n                  {dashboard.realTimeStats.currentLoad.toFixed(0)}%\r\n                </span>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"flex items-center justify-between\">\r\n              <span className=\"text-zinc-400\">Last Updated</span>\r\n              <span className=\"text-white font-medium text-sm\">\r\n                {new Date(analyticsData.timestamp).toLocaleTimeString()}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Recent Activity */}\r\n      <div className=\"bg-zinc-900/50 border border-zinc-800 rounded-xl p-6\">\r\n        <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center\">\r\n          <Clock className=\"w-5 h-5 mr-2\" />\r\n          Recent Activity\r\n        </h3>\r\n        \r\n        <div className=\"space-y-2 max-h-60 overflow-y-auto\">\r\n          {dashboard.recentActivity.slice(-10).map((activity, index) => (\r\n            <motion.div\r\n              key={activity.timestamp || index}\r\n              initial={{ opacity: 0, x: -20 }}\r\n              animate={{ opacity: 1, x: 0 }}\r\n              className=\"flex items-center justify-between py-2 px-3 bg-zinc-800/50 rounded-lg\"\r\n            >\r\n              <div className=\"flex items-center space-x-3\">\r\n                <div className=\"w-2 h-2 bg-blue-500 rounded-full\" />\r\n                <span className=\"text-white text-sm\">\r\n                  {activity.event || 'Unknown Event'}\r\n                </span>\r\n              </div>\r\n              <span className=\"text-zinc-400 text-xs\">\r\n                {activity.timestamp ? \r\n                  new Date(activity.timestamp).toLocaleTimeString() : \r\n                  'Just now'\r\n                }\r\n              </span>\r\n            </motion.div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Debug Panel */}\r\n      <button\r\n        onClick={() => trackEvent('test_event', { source: 'debug_panel' })}\r\n        className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\r\n      >\r\n        Send Test Event\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface MetricCardProps {\r\n  title: string;\r\n  value: string | number;\r\n  icon: React.ReactNode;\r\n  trend: number;\r\n  color: 'blue' | 'green' | 'purple' | 'orange';\r\n}\r\n\r\nfunction MetricCard({ title, value, icon, trend, color }: MetricCardProps) {\r\n  const colorClasses = {\r\n    blue: 'from-blue-500 to-blue-600',\r\n    green: 'from-green-500 to-green-600',\r\n    purple: 'from-purple-500 to-purple-600',\r\n    orange: 'from-orange-500 to-orange-600'\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      whileHover={{ scale: 1.02 }}\r\n      className=\"bg-zinc-900/50 border border-zinc-800 rounded-xl p-6\"\r\n    >\r\n      <div className=\"flex items-center justify-between mb-4\">\r\n        <div className={`p-2 rounded-lg bg-gradient-to-r ${colorClasses[color]}`}>\r\n          {icon}\r\n        </div>\r\n        <div className={`flex items-center text-sm ${\r\n          trend >= 0 ? 'text-green-500' : 'text-red-500'\r\n        }`}>\r\n          <TrendingUp className={`w-4 h-4 mr-1 ${trend < 0 ? 'rotate-180' : ''}`} />\r\n          {Math.abs(trend).toFixed(1)}%\r\n        </div>\r\n      </div>\r\n      \r\n      <div>\r\n        <p className=\"text-zinc-400 text-sm mb-1\">{title}</p>\r\n        <p className=\"text-white text-2xl font-bold\">{value}</p>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n}"],"names":["RealTimeAnalytics","analyticsData","setAnalyticsData","useState","isConnected","setIsConnected","connectionStatus","setConnectionStatus","wsRef","useRef","retryTimeoutRef","useEffect","connectWebSocket","fetchInitialData","current","close","clearTimeout","token","localStorage","getItem","protocol","window","location","wsUrl","host","ws","WebSocket","onopen","console","log","send","JSON","stringify","type","payload","metrics","interval","onmessage","event","message","parse","data","handleWebSocketMessage","error","onclose","setTimeout","onerror","prev","dashboard","timestamp","realtime","totalEvents","events","slice","response","fetch","result","json","success","trackEvent","readyState","OPEN","div","className","p","h2","span","MetricCard","title","value","activeUsers","icon","Users","trend","trends","growth","color","revenueToday","toFixed","DollarSign","conversionRate","Target","realTimeStats","eventsPerMinute","Activity","h3","BarChart3","performanceMetrics","avgResponseTime","CheckCircle","successRate","AlertTriangle","errorRate","Zap","sessionsActive","style","width","Math","min","currentLoad","Date","toLocaleTimeString","Clock","recentActivity","map","activity","index","motion","initial","opacity","x","animate","button","onClick","source","colorClasses","blue","green","purple","orange","whileHover","scale","TrendingUp","abs"],"mappings":"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"}